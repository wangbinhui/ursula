---
- name: neutron api cache dir
  file: dest=/var/cache/neutron/api owner=neutron state=directory

- name: install neutron-server service
  upstart_service:
    name: neutron-server
    user: neutron
    cmd: /usr/local/bin/neutron-server
    config_dirs: /etc/neutron
    config_files: /etc/neutron/plugins/ml2/ml2_plugin.ini
    envs: "{{ neutron.service.envs }}"

- name: stop neutron service before db sync
  service: name=neutron-server state=stopped
  when: database_create.changed or force_sync|default('false')|bool
  tags: db-migrate

- name: sync neutron database
  command: neutron-db-manage --config-file /etc/neutron/neutron.conf \
           --config-file /etc/neutron/plugins/ml2/ml2_plugin.ini upgrade head
  when: database_create.changed or force_sync|default('false')|bool
  run_once: true
  changed_when: true
  notify: restart neutron services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- name: sync neutron database for lbaas
  command: neutron-db-manage --service lbaas --config-file /etc/neutron/neutron.conf \
           --config-file /etc/neutron/plugins/ml2/ml2_plugin.ini upgrade head
  when: (database_create.changed or force_sync|default('false')|bool) and
        ((neutron.lbaas.enable == "smart" and
         groups['controller'][0] not in groups['compute']) or
         neutron.lbaas.enable|bool)
  run_once: true
  changed_when: true
  notify: restart neutron services
  # we want this to always be changed so that it can notify the service restart
  tags: db-migrate

- meta: flush_handlers

- name: start neutron-server
  service: name=neutron-server state=started

- name: Permit access to Neutron
  ufw: rule=allow to_port={{ endpoints.neutron.port.haproxy_api }} proto=tcp

- include: monitoring.yml tags=monitoring,common
  when: monitoring.enabled|default('True')|bool
