---
- name: common role for all hosts
  hosts: all
  gather_facts: force
  roles:
    - role: common
      tags: ['common','common-base']
    - role: manage-disks
      tags: ['common', 'manage-disks']
      when: manage_disks.enabled|default('False')|bool
    - role: collectd-client
      tags: ['collectd-client','collectd']
      when: collectd.enabled|default('False')|bool
  environment: "{{ env_vars|default({}) }}"

- name: security and errata
  hosts: all
  roles:
    - role: security_errata
      tags: ['common', 'security', 'errata']
  environment: "{{ env_vars|default({}) }}"

- name: install logging and dependencies
  hosts: all
  roles:
    - role: logging
      tags: ['common', 'logging']
      when: logging.enabled|default('True')|bool
  environment: "{{ env_vars|default({}) }}"

- name: setup IPv6 router advertisements
  gather_facts: force
  hosts: controller
  roles:
    - role: ipv6ra
      tags: ['infra']
  environment: "{{ env_vars|default({}) }}"

- name: rabbitmq used by openstack
  gather_facts: force
  hosts: controller
  serial: 1 # serial because clustering
  roles:
    - role: rabbitmq
      tags: ['infra', 'rabbitmq']
  environment: "{{ env_vars|default({}) }}"

- name: install common percona components and gather facts
  gather_facts: force
  hosts: db
  roles:
    - role: percona-common
      tags: ['infra', 'percona', 'percona-facts']
  environment: "{{ env_vars|default({}) }}"

- name: install percona on primary
  gather_facts: force
  hosts: db[0]
  vars:
    should_bootstrap_as_primary: True
  roles:
    - role: percona-server
      tags: ['infra', 'percona', 'percona-primary']
  environment: "{{ env_vars|default({}) }}"

- name: install percona on secondaries
  gather_facts: force
  hosts: db:!db[0]
  vars:
    should_bootstrap_as_primary: False
  roles:
    - role: percona-server
      tags: ['infra', 'percona', 'percona-secondary']
  environment: "{{ env_vars|default({}) }}"

- name: install percona arbiter
  gather_facts: force
  hosts: db_arbiter
  roles:
    - role: percona-common
      tags: ['infra', 'percona']

    - role: percona-arbiter
      tags: ['infra', 'percona']
  environment: "{{ env_vars|default({}) }}"

- name: configure percona backups on primary
  hosts: db[0]
  roles:
    - role: percona-backup
      tags: ['infra', 'percona']
  environment: "{{ env_vars|default({}) }}"

- name: install mongodb server
  gather_facts: force
  hosts: mongo_db
  roles:
    - role: mongodb-server
      tags: ['mongodb', 'mongodb-server']
      when: ceilometer.enabled|bool

- name: install mongodb arbiter
  gather_facts: force
  hosts: mongo_arbiter
  roles:
    - role: mongodb-arbiter
      tags: ['mongodb', 'mongodb-arbiter']
      when: ceilometer.enabled|bool

- name: memcached for keystone and horizon
  gather_facts: force
  hosts: controller
  roles:
    - role: memcached
      tags: ['infra']
  environment: "{{ env_vars|default({}) }}"

- name: controller haproxy
  gather_facts: force
  hosts: controller
  roles:
    - role: haproxy
      haproxy_type: openstack
      tags: ['haproxy', 'infra']
      when: haproxy.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: iptables
  hosts: network
  roles:
    - role: iptables
      tags: ['iptables', 'infra']
  environment: "{{ env_vars|default({}) }}"

- name: ceph monitors
  hosts: ceph_monitors
  roles:
    - role: ceph-monitor
      tags: ['ceph', 'ceph-monitor']

- name: ceph osds
  gather_facts: force
  hosts: ceph_osds
  roles:
    - role: ceph-osd
      tags: ['ceph', 'ceph-osd']

# OPENSTACK SERVICES
- name: openstack client tools
  hosts: all
  roles:
    - role: client
      tags: ['openstack', 'client']
  environment: "{{ env_vars|default({}) }}"

- name: keystone code and config
  gather_facts: force
  hosts: controller
  roles:
    - role: openstack-database
      database_name: keystone
      tags: ['openstack', 'keystone', 'control']
    - role: keystone
      tags: ['openstack', 'keystone', 'control']
  environment: "{{ env_vars|default({}) }}"

- name: keystone setup
  hosts: controller[0]
  vars_files:
    - roles/keystone/defaults/main.yml

  roles:
    - role: keystone-setup
      keystone_configured: false
      tags: ['openstack', 'setup', 'keystone-setup']
      #when: not keystone_configured
  environment: "{{ env_vars|default({}) }}"

- name: glance code and config
  gather_facts: force
  hosts: controller
  roles:
    - role: openstack-database
      database_name: glance
      tags: ['openstack', 'glance', 'control', 'ceph']
    - role: glance
      tags: ['openstack', 'glance', 'control', 'ceph']
  environment: "{{ env_vars|default({}) }}"

- name: nova control plane
  gather_facts: force
  hosts: controller
  roles:
    - role: nova-control
      tags: ['openstack', 'nova', 'control']
  environment: "{{ env_vars|default({}) }}"

- name: nova data plane
  gather_facts: force
  hosts: compute
  roles:
    - role: nova-data
      tags: ['openstack', 'nova', 'data']
      when: not ironic.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: cinder control plane
  gather_facts: force
  hosts: controller
  roles:
    - role: cinder-control
      tags: ['openstack', 'cinder', 'control', 'ceph']
      when: cinder.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: cinder data plane
  gather_facts: force
  hosts: cinder_volume
  roles:
    - role: cinder-data
      tags: ['openstack', 'cinder', 'data', 'cinder-data', 'ceph']
      when: cinder.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: ceph compute
  hosts: compute
  gather_facts: force
  roles:
    - role: ceph-compute
      tags: ['ceph', 'ceph-compute']
      when: ceph.enabled|bool

- name: neutron control plane
  gather_facts: force
  hosts: controller
  roles:
    - role: neutron-control
      tags: ['openstack', 'neutron', 'control']
  environment: "{{ env_vars|default({}) }}"

- name: neutron core data plane
  gather_facts: force
  hosts: compute:network
  roles:
    - role: neutron-data
      tags: ['openstack', 'neutron', 'data']
  environment: "{{ env_vars|default({}) }}"

- name: neutron network services data plane
  hosts: network
  roles:
    - role: neutron-data-network
      tags: ['openstack', 'neutron', 'data']
  environment: "{{ env_vars|default({}) }}"

- name: horizon code and config
  hosts: controller
  roles:
    - role: horizon
      tags: ['openstack', 'horizon', 'control']
  environment: "{{ env_vars|default({}) }}"

- name: swift code and config
  gather_facts: force
  hosts: swiftnode
  gather_facts: force
  roles:
    - role: haproxy
      haproxy_type: swift
      tags: ['openstack', 'swift', 'control', 'haproxy', 'infra']
    - role: swift-object
      tags: ['openstack', 'swift', 'swift-object', 'data']
    - role: swift-account
      tags: ['openstack', 'swift', 'data']
    - role: swift-container
      tags: ['openstack', 'swift', 'data']
    - role: swift-proxy
      tags: ['openstack', 'swift', 'control']
  environment: "{{ env_vars|default({}) }}"

- name: swift bootstrap rings
  hosts: swiftnode_primary
  roles:
    - role: swift-ring
      tags: ['openstack', 'swift', 'swift-ring', 'data']
  environment: "{{ env_vars|default({}) }}"

- name: heat code and config
  gather_facts: force
  hosts: controller
  roles:
    - role: openstack-database
      database_name: heat
      tags: ['openstack', 'heat', 'control']
      when: heat.enabled|bool
    - role: heat
      tags: ['openstack', 'heat', 'control']
      when: heat.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: ceilometer control plane
  gather_facts: force
  hosts: controller
  roles:
    - role: ceilometer-control
      tags: ['openstack', 'ceilometer', 'control']
      when: ceilometer.enabled|bool

- name: ceilometer data plane
  gather_facts: force
  hosts: compute
  roles:
    - role: ceilometer-data
      tags: ['openstack', 'ceilometer', 'data']
      when: ceilometer.enabled|bool

- name: magnum code and config
  gather_facts: force
  hosts: controller
  roles:
    - role: openstack-database
      database_name: magnum
      tags: ['openstack', 'magnum', 'control']
      when: magnum.enabled|bool
    - role: magnum
      tags: ['openstack', 'magnum', 'control']
      when: magnum.enabled|bool

- name: ironic control plane
  gather_facts: force
  hosts: controller
  roles:
    - role: ironic-control
      tags: ['openstack', 'ironic', 'control']
      when: ironic.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: ironic data plane
  hosts: controller
  roles:
    - role: ironic-data
      tags: ['openstack', 'ironic', 'data']
      when: ironic.enabled|bool
  environment: "{{ env_vars|default({}) }}"

- name: openstack base setup
  hosts: controller
  roles:
    - role: 'openstack-setup'
      tags: ['openstack-setup', 'openstack', 'setup']
  environment: "{{ env_vars|default({}) }}"

- name: openstack network setup
  hosts: network
  roles:
    - role: 'openstack-network'
      tags: ['openstack', 'setup', 'openstack-network']
      when: neutron.enable_external_interface|bool
  environment: "{{ env_vars|default({}) }}"

